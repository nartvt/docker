version: '3.1'

services:
    redis:
        image: "redis:alpine"
        command: redis-server --requirepass p4ssw0rd
        # restart: always # unless-stopped
        ports:
            - "6379:6379"
        volumes:
            - ./redis-data:/var/lib/redis
            - ./redis.conf:/usr/local/etc/redis/redis.conf
        environment:
            - REDIS_REPLICATION_MODE=master
    app:
        build:
            args:
                user: sammy
                uid: 1000
            context: ./
            dockerfile: ./dockerfiles/laravel/Dockerfile
        image: justrace.vn_php-cli
        # image: 'docker.therunninghub.net_php-cli:latest'
        container_name: php_host_cli
        # restart: always # unless-stopped 
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ${DATABASE_PATH}:/var/www/database
            - ./composer:/usr/local/bin/composer
        networks:
            - trh-mariadb-dev-01
        user: root

    portainer:
        image: 'portainer/portainer:latest'
        container_name: portainer
        ports:
            - 9001:9000
            - 8000:8000
        restart: always
        volumes: 
            - /var/run/docker.sock:/var/run/docker.sock
            - ./portainer_data:/data
        # user: root
        networks:
            - trh-mariadb-dev-01
    
    mariadb:
        image: "mariadb:latest"
        container_name: mariadb_host
        # restart: always 
        ports: 
            - "${DB_PORT}:3306"
        environment:
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_USER: root
            MYSQL_ROOT_PASSWORD: root
        volumes: 
            - ./mariadb/data:/var/lib/mysql
            - ./maria-conf:/app/conf
            # - ./mariadb/conf/:/etc/mysql/
            - ./docker-compose/mariadb:/docker-entrypoint-initdb.d
        user: root
        networks: 
            - trh-mariadb-dev-01

    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: 'rabbitmq'
        # restart: always 
        ports:
            - 5672:5672
            - 15672:15672
        environment: 
            - RABBITMQ_USERNAME=justrace
            - RABBITMQ_PASSWORD=p4ssw0rd
            - RABBITMQ_DEFAULT_VHOST=jr_vhost
        volumes:
            - /rabitmq-data/data/:/var/lib/rabbitmq/
            - /rabitmq-data/log/:/var/log/rabbitmq/
        networks:
            - rabbitmq_go_net
        user: root

    nginx:
        image: nginx:1.17-alpine
        container_name: nginx_host
        # restart: always # unless-stopped 
        ports:
            - 8800:80
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx:/etc/nginx/conf.d
        user: root
        networks:
            - trh-mariadb-dev-01
    cassandra:
        image: bitnami/cassandra
        container_name: cassandra-binami
        ports: 
            - 9042:9042
            - 7000:7000
            - 7199:7199
        environment:
            - CASSANDRA_USER=admin
            - CASSANDRA_PASSWORD=123456
            - CASSANDRA_TRANSPORT_PORT_NUMBER=7000
    # postgres:
    #     image: postgres:12
    #     restart: always
    #     volumes: 
    #         - ./postgresql/data:/var/lib/postgresql/data
    #     environment:
    #         - POSTGRES_USER=postgres
    #         - POSTGRES_PASSWORD=root
    #         - POSTGRES_DB=sampledb
    #         - POSTGRES_INITDB_ARGS="--encoding=UTF-8"
    #     ports: 
    #         - 5432:5432
    #     user: root

# create network name
networks:
    rabbitmq_go_net:
        driver: bridge
    trh-mariadb-dev-01:
        driver: bridge